name: Build Workload

on:
  push:
    branches:
    - main
    paths:
    - 'workload/**'
    - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
    - 'workload/**'
    - '.github/workflows/**'
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Pre-release tag name'
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Build
      env:
        PULLREQUEST_ID: ${{ github.event.number }}
        PRERELEASE_TAG: ${{ github.event.inputs.prerelease }}
      run: make test
      working-directory: ./workload

    - uses: actions/upload-artifact@v4
      with:
        name: tizen-workload-pkgs
        path: ./workload/out/nuget-unsigned/*.nupkg


  deploy:
    runs-on: ubuntu-22.04
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Install libssl1.1
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget http://archive.ubuntu.com/ubuntu/pool/main/o/openssl1.1/libssl1.1_1.1.1f-1ubuntu2.22_amd64.deb
        sudo dpkg -i libssl1.1_1.1.1f-1ubuntu2.22_amd64.deb


    - name: Install Github Package Registry Tool
      run: dotnet tool install --global --no-cache gpr

    - uses: actions/download-artifact@v4
      with:
        name: tizen-workload-pkgs

    - name: Push packages to GPR
      run: |
        gpr push --api-key ${{ secrets.GITHUB_TOKEN }} \
                 --repository ${{ github.repository }} \
                 --retries 3 Samsung.*.nupkg

    - name: Push packages to MyGet
      run: |
        dotnet nuget push Samsung.*.nupkg \
                      -k ${{ secrets.MYGET_APIKEY }} \
                      -s https://tizen.myget.org/F/dotnet/api/v2/package \
                      -t 3000
